AWSTemplateFormatVersion: '2010-09-09'
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC
  Subnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: 'us-west-1a'
  Subnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: 'us-west-1b'
  Subnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.3.0/24'
      AvailabilityZone: 'us-west-1c'
  Subnet4:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.0.4.0/24'
      AvailabilityZone: 'us-west-1d'

  PrivateLink:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcId: !Ref VPC
      ServiceName: 'com.amazonaws.vpce.us-west-1.vpce-svc-xxxxxxxx'
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  LoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2

  EKS:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: MyEKS
      Version: '1.21'

  LambdaSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for Lambda function
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0

  LambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Handler: index.handler
      Role: arn:aws:iam::123456789012:role/lambda-role
      Runtime: nodejs12.x
      Code:
        S3Bucket: my-lambda-code-bucket
        S3Key: lambda_function.zip
      VpcConfig:
        SubnetIds:
          - !Ref Subnet2
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup

  ENI:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      SubnetId: !Ref Subnet2
      Description: 'Lambda ENI'
      GroupSet:
        - !Ref LambdaSecurityGroup

  VpcLink:
    Type: 'AWS::ApiGatewayV2::VpcLink'
    Properties:
      Name: MyVpcLink
      SubnetIds:
        - !Ref Subnet2
      SecurityGroupIds:
        - !Ref LambdaSecurityGroup

  AuroraSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet group for Aurora
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2

  AuroraCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      Engine: aurora-postgresql
      EngineMode: provisioned
      MasterUsername: admin
      MasterUserPassword: adminpassword
      DBSubnetGroupName: !Ref AuroraSubnetGroup

  OpenSearch:
    Type: 'AWS::OpenSearchService::Domain'
    Properties:
      DomainName: MyOpenSearchDomain
      NodeToNodeEncryptionOptions:
        Enabled: true
      VPCOptions:
        SubnetIds:
          - !Ref Subnet3

  EFSFileSystem:
    Type: 'AWS::EFS::FileSystem'
    Properties:
      Encrypted: true
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
      FileSystemTags:
        - Key: Name
          Value: MyEFS

  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: my-s3-bucket
      AccessControl: Private

  AppflowSAS:
    Type: 'AWS::AppFlow::Flow'
    Properties:
      Description: MyAppflowSAS
      FlowName: MyFlow
      SourceFlowConfig:
        ConnectorType: Salesforce
        ConnectorProfileName: MySalesforceProfile
        SourceConnectorProperties:
          Salesforce:
            Object: 'Account'
      Tasks:
        - SourceFields: []
          ConnectorOperator: 'PROJECTION'
          DestinationField: 'DestinationField'
          TaskType: 'MAP'
          TaskProperties:
            'SourceField': 'DestinationField'
      TriggerConfig:
        TriggerType: 'Scheduled'
        TriggerProperties:
          Scheduled: {}
  Cloud9Environment:
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      Description: MyCloud9Environment
      InstanceType: t2.micro
      AutomaticStopTimeMinutes: 30
